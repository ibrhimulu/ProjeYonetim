@model X.PagedList.IPagedList<UserViewModel>
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
    ViewData["Title"] = "Kullanıcılar";
}


<div class="container mt-4">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    <div class="d-flex justify-content-between mb-3">
        <a asp-action="Create" class="btn btn-primary btn-sm"><i class="fa fa-plus me-2 mr-1"></i>Yeni Kullanıcı</a>
    </div>

    <div class="card">
        <div class="card-body">
            <table class="table table-striped table-bordered table-hover table-sm">
                <thead class="table-light">
                    <tr>
                        <th>Kullanıcı Adı</th>
                        <th>Ad Soyad</th>
                        <th>Rol</th>
                        <th>Müdürlük</th>
                        <th>Şeflik</th>
                        <th>Aktiflik</th>
                        <th>Oluşturma Tarihi</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.Username</td>
                            <td>@(string.IsNullOrEmpty(user.NameSurname) ? "-" : user.NameSurname)</td>

                            <td>
                                @switch (user.RoleId)
                                {
                                    case 1:
                                        <span class="badge bg-secondary">User</span>
                                        break;
                                    case 2:
                                        <span class="badge bg-primary">Admin</span>
                                        break;
                                    case 3:
                                        <span class="badge bg-success">IT</span>
                                        break;
                                    case 4:
                                        <span class="badge bg-warning text-dark">Technic</span>
                                        break;
                                    case 11:
                                        <span class="badge bg-dark">Manager</span>
                                        break;
                                    default:
                                        <span class="badge bg-info">Tester</span>
                                        break;
                                }
                            </td>
                            <td>
                                @((ViewBag.Departments as List<SelectListItem>)
                                    .FirstOrDefault(d => d.Value == user.DepartmentId.ToString())?.Text ?? "-")
                            </td>
                            <td>
                                @((ViewBag.SubDepartments as List<SelectListItem>)
                                    .FirstOrDefault(sd => sd.Value == user.SubDepartmentId.ToString())?.Text ?? "-")
                            </td>
                            <td>
                                @if (user.IsActive == true)
                                {
                                    <span class="text-success"><i class="fa fa-check"></i> Aktif</span>
                                }
                                else
                                {
                                    <span class="text-danger"><i class="fa fa-times"></i> Pasif</span>
                                }
                            </td>
                            <td>@user.CreatedAt</td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@user.UserId" class="btn btn-info btn-sm text-white"><i class="fa fa-edit"></i> Düzenle</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

   <!-- Sayfalama -->
<div class="d-flex justify-content-center mt-3">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>

</div>
